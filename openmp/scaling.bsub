set -x
MAXITER=30
export CUDA_VISIBLE_DEVICES=1

source paths/gbar/clang.sh
source paths/gbar/gcc.sh
export GPU=A100

for COMPILER in gcc clang; do
make realclean
for CYCLE in vcycle fcycle; do
for OPTIM in 0 1 2; do
    APP=minimal_$CYCLE
    FILENAME=$CYCLE/$COMPILER/scaling_$OPTIM.txt
    rm -rf results/$FILENAME

    if [ "$COMPILER" = "gcc" ]; then
        BLOCK_SIZE=194
        DIST_SIZE=1024
    else
        BLOCK_SIZE=4
        if [ "$CYCLE" = "fcycle" ]; then
            DIST_SIZE=320
        else
            DIST_SIZE=1024
        fi
    fi

    make clean
    if [ "$OPTIM" = "0" ]; then
        make APP=$APP
    elif [ "$OPTIM" = "1" ]; then
        make BLOCK_SIZE=$BLOCK_SIZE APP=$APP
    elif [ "$OPTIM" = "2" ]; then
        make DIST=static,$DIST_SIZE BLOCK_SIZE=$BLOCK_SIZE APP=$APP
    fi

    LEVELS=2
    for N in 9 17 33 65 129 257 513 1025
    do
        ./bin/$APP -x $N -y $N -z $N -maxiter $MAXITER -levels $LEVELS -stats $FILENAME
        LEVELS=$(($LEVELS + 1))
    done

done # end optimization
done #end cycle
done #end compiler